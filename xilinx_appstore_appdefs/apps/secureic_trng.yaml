### Application Summary
appvendor: secure-ic
appname: trng
short_desc: True random Number Generator
summary: Secure-IC offers both True Random Number Generator (TRNG) resilient to harmonic
  injection for statistically independent sets of bits generation and Deterministic
  Random Bit Generator (DRBG) for high bitrates requirements.These random generators
  are compliant with commonly used statistical tests suites.
Publisher: Secure-IC
Published By: Accelize
Modified: January 23, 2020
Size: 285.49 MB
  
### Deployment Options
DeploymentOptions:
  CloudServices:
    Nimbix: nx5u_xdma_201830_2
  OnPremises:
    Alveo U200: xdma-201830.2
  PortalURL: https://secure-ic.accelize.com/front/customer/listpurchase?product=True%20Random%20Number%20Generator

### Docker Commands
DockerCmds:
  pull: docker_pull docker pull hubxilinx/secureic_trng_alveo_u200
  run: docker run -p 8080:8080 -v /home/$USER/cred.json:/home/appuser/cred.json -v /dev/shm:/data $XILINX_FPGA_DEV_IDS hubxilinx/secureic_trng_alveo_u200
  
### Running the Application
Instructions:
  Alveo U200:
    Application Execution:
      Pull the Docker Image: docker_pull docker pull hubxilinx/secureic_trng_alveo_u200
      Run the Docker Image: docker run -p 8080:8080 -v /home/$USER/cred.json:/home/appuser/cred.json -v /dev/shm:/data $XILINX_FPGA_DEV_IDS hubxilinx/secureic_trng_alveo_u200
      Setup Environment Variables: source /opt/xilinx/appstore/set_env.sh
    Host Setup:
      Centos: sudo yum install -y python3 git curl && git clone https://github.com/Accelize/xilinx-appstore.git
        && python3 xilinx-appstore/host_setup.py -v secure-ic -a trng
      Ubuntu: sudo apt install -y python3 git curl && git clone https://github.com/Accelize/xilinx-appstore.git
        && python3 xilinx-appstore/host_setup.py -v secure-ic -a trng
    Results:
      Asset: assets/secureic_trng/secureic03.png
      Text: 'It will start a webservice that generates random numbers "on-demand".

        Generate 256 bytes of true random data using the following command:

        curl http://{host_ip}:8080?size=256 | hexdump'
  Nimbix:
    Application Execution:
      Results:
        Asset: assets/secureic_trng/secureic03.png
        Text: 'It will start a webservice that generates random numbers "on-demand".

          Generate 256 bytes of true random data using the following command:

          curl http://{nimbix_instance_address}:8080?size=256 | hexdump

          Note: The Nimbix Instance Address is displayed when running the application
          (e.g: "NAE-165-254-189-68.jarvice.com")'
      Run the Application:
        Asset: assets/secureic_trng/secureic02.png
        MachineCores: 16
        MachineType: nx5u_xdma_201830_2
        Parameters:
          'Accelize credentials:': Browse FTP to select your "cred.json" Access Key
            file from Step 2.
      Select the Application on the Nimbix Platform:
        Asset: assets/secureic_trng/secureic01.png
        ButtonName: TRNG Micro-Service
        URL: https://platform.jarvice.com/?page=compute&name=SecureIC
        
### Reserved for host_setup script #####################################
Supported:
  boards:
  - u200
  os:
  - ubuntu-16.04
  - ubuntu-18.04
  - centos
  
HostSetupConfiguration:
- board: xilinx-u200
  dsa_package: xilinx-u200-xdma-201830.2-2580015_16.04.deb
  os: ubuntu-16.04
  xrt_package: xrt_201910.2.2.2250_16.04-xrt.deb
- board: xilinx-u200
  dsa_package: xilinx-u200-xdma-201830.2-2580015_18.04.deb
  os: ubuntu-18.04
  xrt_package: xrt_201910.2.2.2250_18.04-xrt.deb
- board: xilinx-u200
  dsa_package: xilinx-u200-xdma-201830.2-2580015.x86_64.rpm
  os: centos
  xrt_package: xrt_201910.2.2.2250_7.4.1708-xrt.rpm
  

    



