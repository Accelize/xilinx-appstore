---
# Grovf GRegex Definition file

### Application Summary
appvendor: grovf
appname: gregex
short_desc: [GRegex]
summary: GRegeX is an implementation of PCRE compatible regular expression algorithm on FPGA chip achieving 12.8 GB/s throughput with a single IP core.
Publisher: Grovf
Published By: Accelize
Modified: May 13, 2020
Size: 219.49 MB

### Deployment Options
DeploymentOptions:
  OnPremises:
    Alveo U200: xdma 2018.3
  PortalURL: https://grovf.accelize.com/front/customer/listpurchase?name=Xilinx%20AppStore%20Free%20Eval%20Plan


### Running the Application
Instructions:
  Alveo U200:
    Host Setup: '
      Install the Host Setup Script
        curl -sL https://tinyurl.com/getHostSetup | bash
      Run the Host Setup Script
        python3.6 /opt/xilinx/appstore/host_setup.py -v bcom -a sdr_hdr_converter

        Note:
          + Run the host setup script without arguments to get the list of available applications
          + The setup script might require to reboot the host. In this case, please reboot the host and launch the script again until setup is complete.
    '
    Run the Application:
      Setup Environment Variables: source /opt/xilinx/appstore/set_env.sh
      Pull the Docker Image: docker pull hubxilinx/bcom_sdr2hdr_alveo_u200
      Run the Docker Image: docker run -v /opt/xilinx/appstore/cred.json:/home/appuser/cred.json
        -v /dev/shm:/data $XILINX_FPGA_DEV_IDS hubxilinx/bcom_sdr2hdr_alveo_u200 /samples/in.raw
        /data/out.raw
    Results:
      Asset: assets/bcom_sdrtohdr/bcom-sdrtohdr_03.png
      Text: '
          Once your job is complete, an "out.raw" HD HDR sample will be available in "/dev/shm".
          You can use Vooya video player to display it:
            + Download Vooya video player: https://www.offminor.de/downloads.html
            + Play the output file: vooya -p -w 1920 -h 1080 -r 60 --packing R210 --color rgb -b 10 out.raw
          You can now use your own input video file by:
            + Copying your file in "/dev/shm/{YourFileName}"
            + Replacing "-i /samples/in.raw" with "-i /data/{YourFileName}" in the docker run command
        '
